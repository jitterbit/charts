apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: '{{ template "agent-group.name" . }}'
  annotations:
    description: "{{ .Chart.Description }}"
    image-digest: "{{ .Values.image.digest }}"
    image-tag: "{{ .Values.image.tag }}"
  labels:
    app: '{{ template "agent-group.name" . }}'
    chart: '{{ template "agent-group.chart" . }}'
    component: agent-group
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "agent-group.name" . }}
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: '{{ template "agent-group.name" . }}'
      release: "{{ .Release.Name }}"
#  volumeClaimTemplates:
#    - metadata:
#        name: '{{ template "agent-group.name" . }}'
#      spec:
#        storageClassName: {{ template "agent-group.name" . }}
#        accessModes:
#          - ReadWriteOnce
#        resources:
#          requests:
#            storage: 1Gi
  template:
    metadata:
      {{- if or .Values.agent.jitterbitconf .Values.agent.registerjson }}
      annotations:
        {{- if .Values.agent.jitterbitconf }}
        checksum/jitterbitconf-secret: '{{ include (print $.Template.BasePath "/jitterbitconf-secret.yaml") . | sha256sum }}'
        {{- end }}
        {{- if .Values.agent.registerjson }}
        checksum/registerjson-secret: '{{ include (print $.Template.BasePath "/registerjson-secret.yaml") . | sha256sum }}'
        {{- end }}
      {{- end }}
      labels:
        app: '{{ template "agent-group.name" . }}'
        release: "{{ .Release.Name }}"
    spec:
      terminationGracePeriodSeconds: 3600 # 1 hour
      containers:
        - name: "{{ .Chart.Name }}"
          image: {{ .Values.image.repository }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ else }}:{{ .Values.image.tag }}{{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-healthz
              protocol: TCP
              containerPort: 3000
          {{- if .Values.env }}
          env:
            {{- toYaml .Values.env | trimSuffix "\n" | nindent 12 }}
          {{- end }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | trimSuffix "\n" | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | trimSuffix "\n" | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | trimSuffix "\n" | nindent 12 }}
          volumeMounts:
            {{- if .Values.agent.registerjson }}
            - name: agent-group-registerjson
              mountPath: /conf/register.json
              subPath: register.json
              readOnly: true
            {{- end }}
            {{- if .Values.agent.jitterbitconf }}
            - name: agent-group-jitterbitconf
              mountPath: /conf/jitterbit.conf
              subPath: jitterbit.conf
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.agent.registerjson }}
        - name: agent-group-registerjson
          secret:
            secretName: {{ template "agent-group.name" . }}-registerjson
        {{- end }}
        {{- if .Values.agent.jitterbitconf }}
        - name: agent-group-jitterbitconf
          secret:
            secretName: {{ template "agent-group.name" . }}-jitterbitconf
        {{- end }}
      imagePullSecrets:
        - name: '{{ template "agent-group.name" . }}'
      affinity:
        {{- tpl (toYaml .Values.affinity) . | trimSuffix "\n" | nindent 8 }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
